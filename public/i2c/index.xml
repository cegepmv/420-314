<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I2C :: Programmation de plateformes embarquées</title>
    <link>http://localhost:1313/420-314/i2c/index.html</link>
    <description>Objectif: Utiliser le protocole I2C sur un RaspberryPi</description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Thu, 21 Nov 2024 11:28:46 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/420-314/i2c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fonctionnement</title>
      <link>http://localhost:1313/420-314/i2c/fct/index.html</link>
      <pubDate>Thu, 21 Nov 2024 11:28:38 -0500</pubDate>
      <guid>http://localhost:1313/420-314/i2c/fct/index.html</guid>
      <description>Le fonctionnement du protocole I2C s’appuie sur des principes qu’on retrouve dans les communications digitales “sérielles”.&#xA;Horloge et données Il se base sur 2 signaux: SCL (l’horloge ou “clock”) et SDA (les données ou “data”). L’horloge sert à déterminer la fréquence à laquelle des données sont envoyées, et les données sont des valeurs de 1 bit envoyées à chaque période de l’horloge.&#xA;Un exemple simple: supposons que vous voulez transmettre la lettre “a” à l’aide de I2C. Cette lettre correspond à l’octet 01100001 en ASCII, où chaque bit sera une impulsion électrique envoyée à chaque période de la fréquence définie par l’horloge :</description>
    </item>
    <item>
      <title>Matrice LED 8x8</title>
      <link>http://localhost:1313/420-314/i2c/led8x8/index.html</link>
      <pubDate>Thu, 21 Nov 2024 11:28:46 -0500</pubDate>
      <guid>http://localhost:1313/420-314/i2c/led8x8/index.html</guid>
      <description>La matrice de LED founie dans le kit KS0522 utilise le protocole de communication I2C, mais puisque celle-ci est en “output” et donc n’envoie pas de signal analogique au RaspberryPi, on n’a pas besoin du convertisseur ADC pour l’utiliser. Elle est équipée d’une puce HT16K33, conçue spécialement pour contrôler l’affichage dans des matrices de LED de différentes dimensions.&#xA;À partir de RaspberryPi il existe deux manières de lui envoyer des données:</description>
    </item>
  </channel>
</rss>