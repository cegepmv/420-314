<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Préparation :: Programmation de plateformes embarquées</title>
    <link>http://localhost:1313/420-314/prep/index.html</link>
    <description>Objectif: Configurer l’environnement de programmation sur un RaspberryPi</description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Thu, 01 Aug 2024 13:50:14 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/420-314/prep/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuration du Pi</title>
      <link>http://localhost:1313/420-314/prep/config/index.html</link>
      <pubDate>Thu, 01 Aug 2024 13:48:14 -0400</pubDate>
      <guid>http://localhost:1313/420-314/prep/config/index.html</guid>
      <description>Le Raspberry Pi est fourni avec le système d’exploitation RaspberryPi OS pré-installé.&#xA;Il y a tout de même quelques étapes de configuration à réaliser.&#xA;Brancher les périphériques Le Raspberry Pi est un ordinateur à part entière: on l’utilise souvent dans des projets d’objets connectés mais il est tout-à-fait possible d’y raccorder les périphériques habituels (clavier, souris et écran) qu’on retrouve sur les PC.&#xA;Le Pi de votre kit est dans un boîtier et est déjà connecté à un écran tactile.</description>
    </item>
    <item>
      <title>Service SSH</title>
      <link>http://localhost:1313/420-314/prep/ssh/index.html</link>
      <pubDate>Thu, 01 Aug 2024 13:49:54 -0400</pubDate>
      <guid>http://localhost:1313/420-314/prep/ssh/index.html</guid>
      <description>Installer SSH Le service SSH est normalement installé par défaut sur RaspberryPi OS.&#xA;Pour rendre possible l’accès au Pi par SSH (avec putty par exemple) il faut quand même s’assurer qu’il est lancé à chaque démarrage du Pi. Les commandes sont les suivantes:&#xA;sudo systemctl start ssh sudo systemctl enable sshCréer un nouvel utilisateur Afin que chaque utilisateur du RaspberryPi ait son propre compte et puisse travailler sur ses propres fichiers, vous devez vous créer un utilisateur et vous assurer qu’il peut utiliser la commande sudo.</description>
    </item>
    <item>
      <title>Service VNC</title>
      <link>http://localhost:1313/420-314/prep/vnc/index.html</link>
      <pubDate>Thu, 01 Aug 2024 13:49:33 -0400</pubDate>
      <guid>http://localhost:1313/420-314/prep/vnc/index.html</guid>
      <description>VNC est un protocole qui permet d’accéder à distance à l’environnement graphique d’un hôte. Le serveur VNC doit s’éxécuter sur l’hôte où on veut se connecter; le client VNC doit s’éxécuter sur l’hôte à partir d’où on se connecte.&#xA;Il faut donc lancer le service VNC sur votre Pi et utiliser le client VNC sur le poste de travail Windows du lab.&#xA;Dans ce cours on utilisera les programmes RealVNC comme client et serveur.</description>
    </item>
    <item>
      <title>VS Code</title>
      <link>http://localhost:1313/420-314/prep/vscode/index.html</link>
      <pubDate>Thu, 01 Aug 2024 13:50:14 -0400</pubDate>
      <guid>http://localhost:1313/420-314/prep/vscode/index.html</guid>
      <description>Le programme Visual Studio Code peut utiliser le protocole SSH pour se connecter sur un hôte distant et modifier les fichiers qui s’y trouvent.&#xA;Dans ce qui suit nous allons configurer VSCode (sur un PC Windows) pour qu’il se connecte directement sur le RaspberryPi. C’est cette configuration qui sera utilisée en classe.&#xA;Branchement physique Assurez-vous d’abord que le PC et le Pi sont tous deux connectés sur le réseau local du département.</description>
    </item>
  </channel>
</rss>